# -*- coding: utf-8 -*-
"""Arquivos e funções em python

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pOIeKx16ZuO-qn-ZClsWXLqBwX-rZrVH

Arquivos e funções em python

Nível Inicial:

1) Como você pode abrir um arquivo em Python para leitura usando a declaração with?

2) Qual é a diferença entre os métodos read() e readline() ao ler um arquivo em Python?

3) Como você pode abrir um arquivo em Python para escrita usando a declaração with?

4) Como você pode usar a função write() para escrever em um arquivo em Python?

5) O que é uma função em Python e como você pode definir uma?

Nível Intermediário:

6) Quais são os benefícios de usar a declaração with ao lidar com arquivos em Python?

7) Como você pode ler todas as linhas de um arquivo e armazená-las em uma lista em Python?

8) Como você pode definir uma função que aceita argumentos em Python?

9) Qual é a diferença entre parâmetros e argumentos em Python?

10) O que é o escopo de uma variável em Python e como você pode determiná-lo?

Nível Avançado:

11) Como você pode lidar com exceções ao abrir e manipular arquivos em Python?

12) Como você pode usar a declaração global para acessar variáveis fora do escopo de uma função em Python?

13) O que são funções aninhadas (nested functions) em Python e qual é o seu propósito?
14) Como você pode retornar uma função de outra função em Python?

15) O que é o escopo de encerramento (closure) em Python e como ele é útil ao trabalhar com funções?
"""

1) Como você pode abrir um arquivo em Python para leitura usando a declaração with?

with open(nome_arquivo, 'r', 'utf-8') as arquivo:
  # comando para abrir 'nome_arquivo' em modo leitura com encoding utf-8

2) Qual é a diferença entre os métodos read() e readline() ao ler um arquivo em Python?

#Ao usar o método read() para ler um arquivo em Python, ele lê o conteúdo completo do arquivo e retorna uma única string contendo todo o texto.

#Por outro lado, ao usar o método readline(), ele lê uma única linha do arquivo e retorna essa linha como uma string. Se o método readline() for chamado novamente, ele lerá a próxima linha do arquivo, e assim por diante, até atingir o final do arquivo.

3) Como você pode abrir um arquivo em Python para escrita usando a declaração with?
with open(nome_arquivo, 'w', 'utf-8') as arquivo:
# comando para abrir 'nome_arquivo' em modo escrita com encoding utf-8

4) Como você pode usar a função write() para escrever em um arquivo em Python?
with open(nome_arquivo, 'w', 'utf-8') as arquivo:
  arquivo.write(assunto)
#exemplo#*

# Solicita ao usuário para fornecer algumas linhas de texto
linhas = []
while True:
    linha = input("Digite uma linha de texto (ou deixe em branco para sair): ")
    if linha:
        linhas.append(linha)
    else:
        break

# Escreve as linhas fornecidas pelo usuário no arquivo "texto.txt"
with open("texto.txt", 'w', encoding='utf-8') as arquivo:
    for linha in linhas:
        arquivo.write(linha + '\en')  # Adiciona uma quebra de linha ao final de cada linha

print("As linhas foram escritas no arquivo 'texto.txt'.")

5) O que é uma função em Python e como você pode definir uma?

6) Quais são os benefícios de usar a declaração with ao lidar com arquivos em Python?

7) Como você pode ler todas as linhas de um arquivo e armazená-las em uma lista em Python?

8) Como você pode definir uma função que aceita argumentos em Python?

9) Qual é a diferença entre parâmetros e argumentos em Python?

10) O que é o escopo de uma variável em Python e como você pode determiná-lo?

11) Como você pode lidar com exceções ao abrir e manipular arquivos em Python?

12) Como você pode usar a declaração global para acessar variáveis fora do escopo de uma função em Python?

13) O que são funções aninhadas (nested functions) em Python e qual é o seu propósito?

14) Como você pode retornar uma função de outra função em Python?

15) O que é o escopo de encerramento (closure) em Python e como ele é útil ao trabalhar com funções?